<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vfFfecTaXkv1guMAAAAASUVORK5CYII=
</value>
  </data>
</root>